{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob-1"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "BlobStorage"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_1_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "allowedValues": [
        "basic",
        "anonymous"
      ]
    },
    "azureblob_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "sql_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sql-2"
    },
    "sql_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "LookupSQL"
    },
    "sql_1_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      }
    },
    "sql_1_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      }
    },
    "sql_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_1_encryptConnection": {
      "type": "bool",
      "metadata": {
        "description": "Encrypt Connection"
      }
    },
    "sql_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "sql_1_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "AOC@adatis.co.uk"
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast",
        "westus3"
      ],
      "defaultValue": "westeurope"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "LogicApp1"
    },
    "LogicAppIntegrationAccount": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "/subscriptions/0a71d473-cfd2-441c-bfff-2240025cf5d2/resourcegroups/EmailLogicApp/providers/Microsoft.Logic/integrationAccounts/LogicAppIntegration"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Create_Year_month_array": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "yearMonthArray",
                    "type": "array",
                    "value": [
                      "@substring(utcNow(), 0, 4)",
                      "@substring(utcNow(), 5, 2)"
                    ]
                  }
                ]
              },
              "runAfter": {
                "Get_File_name_from_SQL_lookup_using_ID": [
                  "Succeeded"
                ]
              }
            },
            "For_each_attachment": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['Attachments']",
              "actions": {
                "Create_blob_(V2)": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": "@base64ToBinary(items('For_each_attachment')?['ContentBytes'])",
                    "headers": {
                      "ReadFileMetadataFromServer": true
                    },
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                    "queries": {
                      "folderPath": "/raw/@{body('Get_File_name_from_SQL_lookup_using_ID')?['Name']}/@{variables('year')}/@{variables('Month')}",
                      "name": "@{body('Get_File_name_from_SQL_lookup_using_ID')?['Name']}.@{utcNow()}.csv",
                      "queryParametersSingleEncoded": true
                    }
                  },
                  "runAfter": {},
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                }
              },
              "runAfter": {
                "Set_Month": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Get_File_name_from_SQL_lookup_using_ID": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[lookup].[FileMetadata]'))}/items/@{encodeURIComponent(encodeURIComponent(body('Get_ID_from_SQL_email_lookup_table')?['FileID']))}"
              },
              "runAfter": {
                "Get_ID_from_SQL_email_lookup_table": [
                  "Succeeded"
                ]
              }
            },
            "Get_ID_from_SQL_email_lookup_table": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[lookup].[email]'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['From']))}"
              },
              "runAfter": {}
            },
            "Send_email_for_missing_email_senders": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['Attachments']",
              "actions": {
                "Send_an_email_(V2)": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "To": "alex.o.crampton@gmail.com",
                      "Subject": "Missing email sender",
                      "Body": "<p>The email address: @{triggerBody()?['From']} is not in lookup.email table. Please add email address.</p>",
                      "Attachments": [
                        {
                          "ContentBytes": "@{items('Send_email_for_missing_email_senders')?['ContentBytes']}",
                          "Name": "@items('Send_email_for_missing_email_senders')?['Name']"
                        }
                      ]
                    },
                    "path": "/v2/Mail"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Get_ID_from_SQL_email_lookup_table": [
                  "Failed"
                ]
              }
            },
            "Set_Month": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Month",
                    "type": "string",
                    "value": "@{variables('yearMonthArray')[1]}"
                  }
                ]
              },
              "runAfter": {
                "Set_Year": [
                  "Succeeded"
                ]
              }
            },
            "Set_Year": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "year",
                    "type": "string",
                    "value": "@{variables('yearMonthArray')[0]}"
                  }
                ]
              },
              "runAfter": {
                "Create_Year_month_array": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_new_email_arrives": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Mail/OnNewEmail",
                "queries": {
                  "folderPath": "Inbox",
                  "from": "alex.o.crampton@gmail.com;aoc@adatis.co.uk",
                  "importance": "Any",
                  "includeAttachments": true
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              },
              "splitOn": "@triggerBody()?['value']",
              "evaluatedRecurrence": {
                "frequency": "Minute",
                "interval": 5
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              },
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
                "connectionName": "[parameters('sql_1_Connection_Name')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        },
        "integrationAccount": {
          "id": "[parameters('LogicAppIntegrationAccount')]"
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "westeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]",
          "authType": "[parameters('azureblob_1_authType')]",
          "privacySetting": "[parameters('azureblob_1_privacySetting')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sql_1_Connection_Name')]",
      "location": "westeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_1_server')]",
          "database": "[parameters('sql_1_database')]",
          "username": "[parameters('sql_1_username')]",
          "password": "[parameters('sql_1_password')]",
          "encryptConnection": "[parameters('sql_1_encryptConnection')]",
          "privacySetting": "[parameters('sql_1_privacySetting')]",
          "sqlConnectionString": "[parameters('sql_1_sqlConnectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "westeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}